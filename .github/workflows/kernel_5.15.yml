# This is a basic workflow to help you get started with Actions

name: Build 5.15.y

on:
  workflow_dispatch:
  #schedule:
    #- cron: "36 19 * * 2,6"
    
env:
  UPLOAD_RELEASE: true
  TZ: Asia/Jakarta

jobs:
  build_job:
    # The host should always be Linux
    runs-on: ubuntu-18.04
    name: Build Kernel
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.1.1
        name: Run commands
        env:
          DEBIAN_FRONTEND: noninteractive
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu18.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          env: |
            REPO_KERNEL: https://github.com/unifreq/linux-5.15.y
            REPO_BRANCH: main
            CONFIG_URL: https://raw.githubusercontent.com/radityabh/kernel-compiler/main/config/kernel-5.15.y/coba.config
          
          # The shell to run commands with in the container
          shell: /bin/bash
          
          install: |
            apt-get -qq update
            apt-get -qq install curl wget build-essential libncurses-dev bison flex libssl-dev libelf-dev git u-boot-tools
            apt-get -qq autoremove --purge
            apt-get -qq clean
            ln -sf /usr/share/zoneinfo/Asia/Jakarta /etc/localtime

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            git clone --depth 1 ${REPO_KERNEL} -b ${REPO_BRANCH} kernel
            cd kernel
            img="Image"
            arch="arm64"
            dtbs="dtbs"
            # wget -O .config ${CONFIG_URL}
            # sed -ri '/CONFIG_SYSTEM_TRUSTED_KEYS/s/=.+/=""/g' .config && scripts/config --disable MODULE_SIG && scripts/config --disable DEBUG_INFO
            make defconfig
            echo -e "$(nproc) thread compile"
            make -j$(nproc) ${img} modules ${dtbs}
            kver=`make kernelrelease`
            dest="out"
            rm -rf ${dest}
            mkdir -p ${dest}
            make modules_install
            make headers_install INSTALL_HDR_PATH=/usr
            make install
            cd /boot
            cp config-${kver} ${PWD}/${dest}
            cp initrd.img-${kver} ${PWD}/${dest}
            cp uInitrd-${kver} ${PWD}/${dest}
            cp config-${kver} ${PWD}/${dest}
            cp vmlinuz-${kver} ${PWD}/${dest}
            echo "PACKAGED_OUTPUTPATH=${PWD}/${dest}" >> $GITHUB_ENV
            echo "::set-output name=status::success"

      - name: Upload Firmware Files to GitHub Release
        uses: ncipollo/release-action@v1
        if: steps.build.outputs.status == 'success' && !cancelled()
        with:
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Test Kernel
          tag: test-kernel
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}
